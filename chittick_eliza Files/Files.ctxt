#BlueJ class context
comment0.target=Files
comment0.text=\r\n\ The\ Files\ class\ has\ 2\ intialized\ fields\ for\ the\ cipherDecipherString(String\ text)\ method.\r\n\ Includes\ the\ main\ method\r\n\ a\ method\ that\ displays\ a\ menu\r\n\ a\ method\ that\ displays\ an\ exit\ message\r\n\ a\ method\ that\ calls\ the\ menu\ method\ and\ allows\ the\ user\ to\ input\ their\ choice\r\n\ a\ method\ that\ reads\ the\ file\ entered\ by\ a\ user\ and\ displays\ to\ the\ user\r\n\ a\ method\ that\ writes\ texts\ inputted\ by\ the\ user\ to\ the\ file\ of\ their\ choosing\r\n\ a\ method\ that\ copies\ the\ contents\ of\ one\ file\ picked\ by\ the\ user\ to\ another\ file\ picked\ by\ the\ user\r\n\ a\ method\ that\ deciphers\ the\ code\ from\ the\ mystery.txt\ file\ and\ writes\ it\ to\ the\ the\ mysteryoutput.txt\ file\r\n\ a\ method\ that\ can\ be\ used\ to\ decipher\ text\r\n\ a\ method\ that\ reads\ the\ contents\ of\ the\ details.txt\ file\ and\ writes\ the\ average\ and\ names\ to\ the\r\n\ namesandscores.txt\ file\r\n\ \r\n\ @author\ Eliza\r\n\ @version\ 12/11/2023\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\ \r\n\ main\ method\r\n\ creates\ an\ instance\ of\ the\ files\ class\ and\ calls\ the\ runFilesTests\ method\r\n
comment10.params=
comment10.target=void\ processDetails()
comment10.text=\r\n\ initialize\ the\ variables\r\n\ set\ up\ an\ array\r\n\ use\ try\ and\ catch\ statements\r\n\ create\ instances\ of\ the\ variables\ using\ details.txt\ and\ namesandscores.txt\ for\ the\ fileReader\ and\ outputStream\r\n\ initialize\ the\ averagescore\ as\ a\ float\r\n\ use\ a\ while\ loop\ with\ the\ condition\ of\ the\ nextLine\ not\ being\ null\r\n\ use\ the\ split\ method\ to\ split\ the\ values\ from\ the\ score\ array\r\n\ then\ use\ the\ correct\ split\ values\ and\ turn\ them\ into\ int\ instead\ of\ String\r\n\ display\ the\ name\ and\ scores\ to\ the\ user\ and\ read\ the\ nextLine\ of\ the\ input\ file\r\n\ if\ the\ printWriter\ is\ not\ null\ then\ close\ it\r\n\ \r\n
comment2.params=
comment2.target=void\ Menu()
comment2.text=\ \r\n\ displays\ a\ list\ of\ choices\ to\ the\ user\r\n
comment3.params=
comment3.target=void\ Exit()
comment3.text=\ \r\n\ displays\ an\ exit\ message\ to\ the\ user\r\n
comment4.params=
comment4.target=void\ runFileTests()
comment4.text=\ \r\n\ initializes\ the\ choice\ variable\r\n\ uses\ a\ do\ while\ loop\ to\ call\ the\ menu\ method,\ allow\ the\ user\ to\ input\ a\ choice\ and\ uses\ if\ statements\ to\r\n\ allows\ the\ code\ to\ pick\ the\ correct\ corresponding\ choice,\ displays\ a\ message\ if\ the\ user\ inputs\ an\ invalid\r\n\ choice\ and\ does\ this\ all\ while\ the\ choice\ is\ not\ equal\ to\ 0\r\n
comment5.params=
comment5.target=void\ readFromFile()
comment5.text=\ \r\n\ displays\ instructions\ to\ the\ user\r\n\ uses\ a\ scanner\ to\ get\ the\ user\ input\ for\ the\ file\ name\r\n\ initializes\ the\ nextLine,\ Filereader\ and\ BufferedReader\ variables\r\n\ uses\ a\ try,\ catch,\ finally\ statement\r\n\ creates\ an\ instance\ of\ the\ FileReader,\ BufferedReader\r\n\ allows\ nextLine\ to\ equal\ the\ lines\ read\ from\ the\ BufferedReader\r\n\ if\ an\ error\ occur\ it\ will\ display\ a\ message\r\n\ if\ the\ bufferedReader\ is\ not\ equal\ to\ null\ then\ close\ the\ file\r\n\ \r\n\ \r\n
comment6.params=
comment6.target=void\ writeToFile()
comment6.text=\ \r\n\ initializes\ the\ outputStream\ and\ printWriter\ and\ set\ them\ equal\ to\ null\r\n\ uses\ a\ try,\ catch,\ finally\ statement\r\n\ uses\ a\ scanner\ to\ allow\ the\ user\ to\ input\ the\ file\ to\ write\ to\ and\ sets\ that\ equal\ to\ filename\r\n\ creates\ an\ instance\ of\ FileOutputStream\ using\ the\ filename\ as\ a\ parameter,\ PrintWriter\ using\ the\ outputStream\r\n\ initializes\ values\ and\ number\ variables,\ set\ number\ variable\ equal\ to\ 1\r\n\ use\ a\ while\ loop\ with\ the\ condition\ of\ number\ equal\ to\ 1\r\n\ displays\ a\ message\ of\ instructions\ to\ the\ user\r\n\ sets\ values\ equal\ to\ the\ nextLine\r\n\ uses\ printWriter\ to\ write\ the\ inputted\ values\ into\ the\ file\ that\ was\ inputted\r\n\ use\ an\ if\ statement\ to\ change\ the\ value\ of\ the\ number\ variable\ when\ the\ values\ variable\ is\ empty\r\n\ When\ an\ error\ occurs\ displays\ an\ error\ message\r\n\ if\ the\ printWriter\ is\ not\ null\ then\ it\ will\ close\ the\ printWriter\r\n\ \r\n
comment7.params=
comment7.target=void\ copyToFile()
comment7.text=\ \r\n\ \ initializes\ the\ nextLine,\ Filereader,\ BufferedReader,\ outputStream,\ printWriter,\ nextLine,\ input\ and\ ouput\ varaibles\r\n\ \ display\ an\ instruction\ message\ to\ the\ user\r\n\ \ use\ a\ scanner\ to\ take\ in\ user\ input\ and\ assign\ them\ to\ the\ input\ and\ output\ variables\r\n\ \ use\ try,\ catch\ and\ finally\ statement\r\n\ \ create\ instances\ of\ FileReader\ using\ input\ as\ parameter\ and\ BufferedReader\ using\ fileReader\ as\ parameter\r\n\ \ use\ printWriter\ to\ write\ the\ inputted\ values\ into\ the\ file\ that\ was\ inputted\r\n\ \ use\ while\ loop\ with\ the\ condition\ of\ the\ nextLine\ not\ being\ equal\ to\ null\r\n\ \ display\ the\ nextLine\ to\ the\ user\r\n\ \ reinitialize\ the\ nextLine\ in\ the\ loop\ so\ that\ it\ will\ read\ the\ nextLine\ again\r\n\ \ use\ printWriter\ in\ the\ loop\ to\ write\ the\ nextLine\ values\ into\ the\ file\ that\ was\ inputted\r\n\ \ once\ the\ loop\ is\ over\ close\ the\ bufferedReader\ so\ that\ the\ read\ file\ is\ closed\r\n\ \ and\ once\ the\ printWriter\ is\ null\ close\ the\ printWriter\ to\ stop\ writing\ values\r\n\ \ \r\n
comment8.params=
comment8.target=void\ decipherFile()
comment8.text=\r\n\ initialize\ the\ FileReader,\ BufferedReader,\ FileOutputStream,\ PrintWriter,\ nextLine\ and\ cipheredMethod\ variables\r\n\ use\ try,\ catch\ and\ finally\ statement\r\n\ create\ instances\ of\ the\ fileReader,\ bufferedReader,\ outputStream,\ printWriter,\ nextLine\r\n\ use\ a\ while\ loop\ with\ the\ condition\ that\ the\ nextLine\ is\ not\ equal\ to\ null\r\n\ in\ the\ loop\ put\ the\ nextLine\ values\ through\ the\ cipherDecipherString\ method\ and\ set\ that\ equal\ to\ cipheredMethod\r\n\ then\ write\ that\ to\ the\ output\ file\ and\ read\ the\ next\ line\ of\ the\ input\ file\r\n\ if\ the\ printWriter\ is\ not\ equal\ to\ null\ then\ close\ it\ \r\n\ \r\n
comment9.params=text
comment9.target=java.lang.String\ cipherDecipherString(java.lang.String)
comment9.text=\r\n\ used\ to\ decipher\ the\ message\ in\ the\ mystery.txt\ file\r\n\ \r\n
numComments=11
